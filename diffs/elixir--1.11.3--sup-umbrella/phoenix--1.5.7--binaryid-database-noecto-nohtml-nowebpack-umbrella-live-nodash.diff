diff --git .formatter.exs .formatter.exs
index 90a0853..6915976 100644
--- .formatter.exs
+++ .formatter.exs
@@ -1,4 +1,3 @@
-# Used by "mix format"
 [
   inputs: ["mix.exs", "config/*.exs"],
   subdirectories: ["apps/*"]
diff --git .gitignore .gitignore
index 48bf740..12179ea 100644
--- .gitignore
+++ .gitignore
@@ -7,7 +7,7 @@
 # The directory Mix downloads your dependencies sources to.
 /deps/
 
-# Where third-party dependencies like ExDoc output generated docs.
+# Where 3rd-party dependencies like ExDoc output generated docs.
 /doc/
 
 # Ignore .fetch files in case you like to edit your project deps locally.
@@ -18,7 +18,3 @@ erl_crash.dump
 
 # Also ignore archive artifacts (built via "mix archive.build").
 *.ez
-
-
-# Temporary files for e.g. tests
-/tmp
diff --git README.md README.md
index 444b469..729adca 100644
--- README.md
+++ README.md
@@ -1,4 +1 @@
-# MyApp
-
-**TODO: Add description**
-
+# MyApp.Umbrella
diff --git config/config.exs config/config.exs
index ab23e80..0284598 100644
--- config/config.exs
+++ config/config.exs
@@ -1,18 +1,22 @@
 # This file is responsible for configuring your umbrella
 # and **all applications** and their dependencies with the
-# help of the Config module.
+# help of Mix.Config.
 #
 # Note that all applications in your umbrella share the
 # same configuration and dependencies, which is why they
 # all use the same configuration file. If you want different
 # configurations or dependencies per app, it is best to
 # move said applications out of the umbrella.
-import Config
+use Mix.Config
 
-# Sample configuration:
-#
-#     config :logger, :console,
-#       level: :info,
-#       format: "$date $time [$level] $metadata$message\n",
-#       metadata: [:user_id]
-#
+# Configures Elixir's Logger
+config :logger, :console,
+  format: "$time $metadata[$level] $message\n",
+  metadata: [:request_id]
+
+# Use Jason for JSON parsing in Phoenix
+config :phoenix, :json_library, Jason
+
+# Import environment specific config. This must remain at the bottom
+# of this file so it overrides the configuration defined above.
+import_config "#{Mix.env()}.exs"
diff --git a/projects/phoenix/1.5.7/binaryid-database-noecto-nohtml-nowebpack-umbrella-live-nodash/config/dev.exs config/dev.exs
new file mode 100644
index 0000000..b3471ee
--- /dev/null
+++ config/dev.exs
@@ -0,0 +1,11 @@
+use Mix.Config
+
+# Do not include metadata nor timestamps in development logs
+config :logger, :console, format: "[$level] $message\n"
+
+# Initialize plugs at runtime for faster development compilation
+config :phoenix, :plug_init_mode, :runtime
+
+# Set a higher stacktrace during development. Avoid configuring such
+# in production as building large stacktraces may be expensive.
+config :phoenix, :stacktrace_depth, 20
diff --git a/projects/phoenix/1.5.7/binaryid-database-noecto-nohtml-nowebpack-umbrella-live-nodash/config/prod.exs config/prod.exs
new file mode 100644
index 0000000..8150a5b
--- /dev/null
+++ config/prod.exs
@@ -0,0 +1,8 @@
+use Mix.Config
+
+# Do not print debug messages in production
+config :logger, level: :info
+
+# Finally import the config/prod.secret.exs which loads secrets
+# and configuration from environment variables.
+import_config "prod.secret.exs"
diff --git a/projects/phoenix/1.5.7/binaryid-database-noecto-nohtml-nowebpack-umbrella-live-nodash/config/prod.secret.exs config/prod.secret.exs
new file mode 100644
index 0000000..a6ed850
--- /dev/null
+++ config/prod.secret.exs
@@ -0,0 +1,5 @@
+# In this file, we load production configuration and secrets
+# from environment variables. You can also hardcode secrets,
+# although such is generally not recommended and you have to
+# remember to add this file to your .gitignore.
+use Mix.Config
diff --git a/projects/phoenix/1.5.7/binaryid-database-noecto-nohtml-nowebpack-umbrella-live-nodash/config/test.exs config/test.exs
new file mode 100644
index 0000000..af29307
--- /dev/null
+++ config/test.exs
@@ -0,0 +1,4 @@
+use Mix.Config
+
+# Print only warnings and errors during test
+config :logger, level: :warn
diff --git mix.exs mix.exs
index 304984a..099c509 100644
--- mix.exs
+++ mix.exs
@@ -1,4 +1,4 @@
-defmodule MyApp.MixProject do
+defmodule MyApp.Umbrella.MixProject do
   use Mix.Project
 
   def project do
@@ -6,16 +6,40 @@ defmodule MyApp.MixProject do
       apps_path: "apps",
       version: "0.1.0",
       start_permanent: Mix.env() == :prod,
-      deps: deps()
+      deps: deps(),
+      aliases: aliases()
     ]
   end
 
-  # Dependencies listed here are available only for this
-  # project and cannot be accessed from applications inside
-  # the apps folder.
+  # Dependencies can be Hex packages:
   #
-  # Run "mix help deps" for examples and options.
+  #   {:mydep, "~> 0.3.0"}
+  #
+  # Or git/path repositories:
+  #
+  #   {:mydep, git: "https://github.com/elixir-lang/mydep.git", tag: "0.1.0"}
+  #
+  # Type "mix help deps" for more examples and options.
+  #
+  # Dependencies listed here are available only for this project
+  # and cannot be accessed from applications inside the apps/ folder.
   defp deps do
     []
   end
+
+  # Aliases are shortcuts or tasks specific to the current project.
+  # For example, to install project dependencies and perform other setup tasks, run:
+  #
+  #     $ mix setup
+  #
+  # See the documentation for `Mix` for more info on aliases.
+  #
+  # Aliases listed here are available only for this project
+  # and cannot be accessed from applications inside the apps/ folder.
+  defp aliases do
+    [
+      # run `mix setup` in all child apps
+      setup: ["cmd mix setup"]
+    ]
+  end
 end
