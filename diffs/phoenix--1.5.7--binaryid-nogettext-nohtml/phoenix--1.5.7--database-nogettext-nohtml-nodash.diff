diff --git config/config.exs config/config.exs
index 4a28872..819aaf2 100644
--- config/config.exs
+++ config/config.exs
@@ -8,8 +8,7 @@
 use Mix.Config
 
 config :my_app,
-  ecto_repos: [MyApp.Repo],
-  generators: [binary_id: true]
+  ecto_repos: [MyApp.Repo]
 
 # Configures the endpoint
 config :my_app, MyAppWeb.Endpoint,
diff --git config/dev.exs config/dev.exs
index 43cba2f..cdedfa2 100644
--- config/dev.exs
+++ config/dev.exs
@@ -2,8 +2,8 @@ use Mix.Config
 
 # Configure your database
 config :my_app, MyApp.Repo,
-  username: "postgres",
-  password: "postgres",
+  username: "root",
+  password: "",
   database: "my_app_dev",
   hostname: "localhost",
   show_sensitive_data_on_connection_error: true,
diff --git config/test.exs config/test.exs
index 5589099..e4a57c1 100644
--- config/test.exs
+++ config/test.exs
@@ -6,8 +6,8 @@ use Mix.Config
 # to provide built-in test partitioning in CI environment.
 # Run `mix help test` for more information.
 config :my_app, MyApp.Repo,
-  username: "postgres",
-  password: "postgres",
+  username: "root",
+  password: "",
   database: "my_app_test#{System.get_env("MIX_TEST_PARTITION")}",
   hostname: "localhost",
   pool: Ecto.Adapters.SQL.Sandbox
diff --git lib/my_app/repo.ex lib/my_app/repo.ex
index 595ff57..c623d89 100644
--- lib/my_app/repo.ex
+++ lib/my_app/repo.ex
@@ -1,5 +1,5 @@
 defmodule MyApp.Repo do
   use Ecto.Repo,
     otp_app: :my_app,
-    adapter: Ecto.Adapters.Postgres
+    adapter: Ecto.Adapters.MyXQL
 end
diff --git lib/my_app_web/endpoint.ex lib/my_app_web/endpoint.ex
index f29dc8f..8e2fda4 100644
--- lib/my_app_web/endpoint.ex
+++ lib/my_app_web/endpoint.ex
@@ -14,8 +14,6 @@ defmodule MyAppWeb.Endpoint do
     websocket: true,
     longpoll: false
 
-  socket "/live", Phoenix.LiveView.Socket, websocket: [connect_info: [session: @session_options]]
-
   # Serve at "/" the static files from "priv/static" directory.
   #
   # You should set gzip to true if you are running phx.digest
@@ -33,10 +31,6 @@ defmodule MyAppWeb.Endpoint do
     plug Phoenix.Ecto.CheckRepoStatus, otp_app: :my_app
   end
 
-  plug Phoenix.LiveDashboard.RequestLogger,
-    param_key: "request_logger",
-    cookie_key: "request_logger"
-
   plug Plug.RequestId
   plug Plug.Telemetry, event_prefix: [:phoenix, :endpoint]
 
diff --git lib/my_app_web/router.ex lib/my_app_web/router.ex
index 4abdff1..5f5f6fc 100644
--- lib/my_app_web/router.ex
+++ lib/my_app_web/router.ex
@@ -8,20 +8,4 @@ defmodule MyAppWeb.Router do
   scope "/api", MyAppWeb do
     pipe_through :api
   end
-
-  # Enables LiveDashboard only for development
-  #
-  # If you want to use the LiveDashboard in production, you should put
-  # it behind authentication and allow only admins to access it.
-  # If your application does not have an admins-only section yet,
-  # you can use Plug.BasicAuth to set up some basic authentication
-  # as long as you are also using SSL (which you should anyway).
-  if Mix.env() in [:dev, :test] do
-    import Phoenix.LiveDashboard.Router
-
-    scope "/" do
-      pipe_through [:fetch_session, :protect_from_forgery]
-      live_dashboard "/dashboard", metrics: MyAppWeb.Telemetry
-    end
-  end
 end
diff --git mix.exs mix.exs
index 98c30b1..d98541e 100644
--- mix.exs
+++ mix.exs
@@ -36,8 +36,7 @@ defmodule MyApp.MixProject do
       {:phoenix, "~> 1.5.7"},
       {:phoenix_ecto, "~> 4.1"},
       {:ecto_sql, "~> 3.4"},
-      {:postgrex, ">= 0.0.0"},
-      {:phoenix_live_dashboard, "~> 0.4"},
+      {:myxql, ">= 0.0.0"},
       {:telemetry_metrics, "~> 0.4"},
       {:telemetry_poller, "~> 0.4"},
       {:jason, "~> 1.0"},
