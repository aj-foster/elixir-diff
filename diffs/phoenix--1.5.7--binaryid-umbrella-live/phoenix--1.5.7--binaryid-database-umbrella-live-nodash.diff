diff --git apps/my_app/lib/my_app/repo.ex apps/my_app/lib/my_app/repo.ex
index 595ff57..c623d89 100644
--- apps/my_app/lib/my_app/repo.ex
+++ apps/my_app/lib/my_app/repo.ex
@@ -1,5 +1,5 @@
 defmodule MyApp.Repo do
   use Ecto.Repo,
     otp_app: :my_app,
-    adapter: Ecto.Adapters.Postgres
+    adapter: Ecto.Adapters.MyXQL
 end
diff --git apps/my_app/mix.exs apps/my_app/mix.exs
index 8cbc8b8..7cf924c 100644
--- apps/my_app/mix.exs
+++ apps/my_app/mix.exs
@@ -38,7 +38,7 @@ defmodule MyApp.MixProject do
     [
       {:phoenix_pubsub, "~> 2.0"},
       {:ecto_sql, "~> 3.4"},
-      {:postgrex, ">= 0.0.0"},
+      {:myxql, ">= 0.0.0"},
       {:jason, "~> 1.0"}
     ]
   end
diff --git apps/my_app_web/lib/my_app_web/endpoint.ex apps/my_app_web/lib/my_app_web/endpoint.ex
index cd2a818..df7c7dd 100644
--- apps/my_app_web/lib/my_app_web/endpoint.ex
+++ apps/my_app_web/lib/my_app_web/endpoint.ex
@@ -7,7 +7,7 @@ defmodule MyAppWeb.Endpoint do
   @session_options [
     store: :cookie,
     key: "_my_app_web_key",
-    signing_salt: "D3KJdQNE"
+    signing_salt: "L0+JItk6"
   ]
 
   socket "/socket", MyAppWeb.UserSocket,
@@ -35,10 +35,6 @@ defmodule MyAppWeb.Endpoint do
     plug Phoenix.Ecto.CheckRepoStatus, otp_app: :my_app_web
   end
 
-  plug Phoenix.LiveDashboard.RequestLogger,
-    param_key: "request_logger",
-    cookie_key: "request_logger"
-
   plug Plug.RequestId
   plug Plug.Telemetry, event_prefix: [:phoenix, :endpoint]
 
diff --git apps/my_app_web/lib/my_app_web/router.ex apps/my_app_web/lib/my_app_web/router.ex
index ad9430e..d7a49da 100644
--- apps/my_app_web/lib/my_app_web/router.ex
+++ apps/my_app_web/lib/my_app_web/router.ex
@@ -24,20 +24,4 @@ defmodule MyAppWeb.Router do
   # scope "/api", MyAppWeb do
   #   pipe_through :api
   # end
-
-  # Enables LiveDashboard only for development
-  #
-  # If you want to use the LiveDashboard in production, you should put
-  # it behind authentication and allow only admins to access it.
-  # If your application does not have an admins-only section yet,
-  # you can use Plug.BasicAuth to set up some basic authentication
-  # as long as you are also using SSL (which you should anyway).
-  if Mix.env() in [:dev, :test] do
-    import Phoenix.LiveDashboard.Router
-
-    scope "/" do
-      pipe_through :browser
-      live_dashboard "/dashboard", metrics: MyAppWeb.Telemetry
-    end
-  end
 end
diff --git apps/my_app_web/lib/my_app_web/templates/layout/root.html.leex apps/my_app_web/lib/my_app_web/templates/layout/root.html.leex
index 630a552..d3b97a7 100644
--- apps/my_app_web/lib/my_app_web/templates/layout/root.html.leex
+++ apps/my_app_web/lib/my_app_web/templates/layout/root.html.leex
@@ -15,9 +15,7 @@
         <nav role="navigation">
           <ul>
             <li><a href="https://hexdocs.pm/phoenix/overview.html">Get Started</a></li>
-            <%= if function_exported?(Routes, :live_dashboard_path, 2) do %>
-              <li><%= link "LiveDashboard", to: Routes.live_dashboard_path(@conn, :home) %></li>
-            <% end %>
+            
           </ul>
         </nav>
         <a href="https://phoenixframework.org/" class="phx-logo">
diff --git apps/my_app_web/mix.exs apps/my_app_web/mix.exs
index 40d0489..d4215a9 100644
--- apps/my_app_web/mix.exs
+++ apps/my_app_web/mix.exs
@@ -43,7 +43,6 @@ defmodule MyAppWeb.MixProject do
       {:floki, ">= 0.27.0", only: :test},
       {:phoenix_html, "~> 2.11"},
       {:phoenix_live_reload, "~> 1.2", only: :dev},
-      {:phoenix_live_dashboard, "~> 0.4"},
       {:telemetry_metrics, "~> 0.4"},
       {:telemetry_poller, "~> 0.4"},
       {:gettext, "~> 0.11"},
diff --git config/dev.exs config/dev.exs
index 9a31fdb..02341ee 100644
--- config/dev.exs
+++ config/dev.exs
@@ -2,8 +2,8 @@ use Mix.Config
 
 # Configure your database
 config :my_app, MyApp.Repo,
-  username: "postgres",
-  password: "postgres",
+  username: "root",
+  password: "",
   database: "my_app_dev",
   hostname: "localhost",
   show_sensitive_data_on_connection_error: true,
diff --git config/test.exs config/test.exs
index a885229..d357643 100644
--- config/test.exs
+++ config/test.exs
@@ -6,8 +6,8 @@ use Mix.Config
 # to provide built-in test partitioning in CI environment.
 # Run `mix help test` for more information.
 config :my_app, MyApp.Repo,
-  username: "postgres",
-  password: "postgres",
+  username: "root",
+  password: "",
   database: "my_app_test#{System.get_env("MIX_TEST_PARTITION")}",
   hostname: "localhost",
   pool: Ecto.Adapters.SQL.Sandbox
