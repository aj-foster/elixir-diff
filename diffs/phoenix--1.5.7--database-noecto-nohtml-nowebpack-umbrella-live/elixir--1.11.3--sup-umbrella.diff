diff --git .formatter.exs .formatter.exs
index 6915976..90a0853 100644
--- .formatter.exs
+++ .formatter.exs
@@ -1,3 +1,4 @@
+# Used by "mix format"
 [
   inputs: ["mix.exs", "config/*.exs"],
   subdirectories: ["apps/*"]
diff --git .gitignore .gitignore
index 12179ea..48bf740 100644
--- .gitignore
+++ .gitignore
@@ -7,7 +7,7 @@
 # The directory Mix downloads your dependencies sources to.
 /deps/
 
-# Where 3rd-party dependencies like ExDoc output generated docs.
+# Where third-party dependencies like ExDoc output generated docs.
 /doc/
 
 # Ignore .fetch files in case you like to edit your project deps locally.
@@ -18,3 +18,7 @@ erl_crash.dump
 
 # Also ignore archive artifacts (built via "mix archive.build").
 *.ez
+
+
+# Temporary files for e.g. tests
+/tmp
diff --git README.md README.md
index 729adca..444b469 100644
--- README.md
+++ README.md
@@ -1 +1,4 @@
-# MyApp.Umbrella
+# MyApp
+
+**TODO: Add description**
+
diff --git config/config.exs config/config.exs
index 0284598..ab23e80 100644
--- config/config.exs
+++ config/config.exs
@@ -1,22 +1,18 @@
 # This file is responsible for configuring your umbrella
 # and **all applications** and their dependencies with the
-# help of Mix.Config.
+# help of the Config module.
 #
 # Note that all applications in your umbrella share the
 # same configuration and dependencies, which is why they
 # all use the same configuration file. If you want different
 # configurations or dependencies per app, it is best to
 # move said applications out of the umbrella.
-use Mix.Config
+import Config
 
-# Configures Elixir's Logger
-config :logger, :console,
-  format: "$time $metadata[$level] $message\n",
-  metadata: [:request_id]
-
-# Use Jason for JSON parsing in Phoenix
-config :phoenix, :json_library, Jason
-
-# Import environment specific config. This must remain at the bottom
-# of this file so it overrides the configuration defined above.
-import_config "#{Mix.env()}.exs"
+# Sample configuration:
+#
+#     config :logger, :console,
+#       level: :info,
+#       format: "$date $time [$level] $metadata$message\n",
+#       metadata: [:user_id]
+#
diff --git config/dev.exs b/projects/phoenix/1.5.7/database-noecto-nohtml-nowebpack-umbrella-live/config/dev.exs
deleted file mode 100644
index b3471ee..0000000
--- config/dev.exs
+++ /dev/null
@@ -1,11 +0,0 @@
-use Mix.Config
-
-# Do not include metadata nor timestamps in development logs
-config :logger, :console, format: "[$level] $message\n"
-
-# Initialize plugs at runtime for faster development compilation
-config :phoenix, :plug_init_mode, :runtime
-
-# Set a higher stacktrace during development. Avoid configuring such
-# in production as building large stacktraces may be expensive.
-config :phoenix, :stacktrace_depth, 20
diff --git config/prod.exs b/projects/phoenix/1.5.7/database-noecto-nohtml-nowebpack-umbrella-live/config/prod.exs
deleted file mode 100644
index 8150a5b..0000000
--- config/prod.exs
+++ /dev/null
@@ -1,8 +0,0 @@
-use Mix.Config
-
-# Do not print debug messages in production
-config :logger, level: :info
-
-# Finally import the config/prod.secret.exs which loads secrets
-# and configuration from environment variables.
-import_config "prod.secret.exs"
diff --git config/prod.secret.exs b/projects/phoenix/1.5.7/database-noecto-nohtml-nowebpack-umbrella-live/config/prod.secret.exs
deleted file mode 100644
index a6ed850..0000000
--- config/prod.secret.exs
+++ /dev/null
@@ -1,5 +0,0 @@
-# In this file, we load production configuration and secrets
-# from environment variables. You can also hardcode secrets,
-# although such is generally not recommended and you have to
-# remember to add this file to your .gitignore.
-use Mix.Config
diff --git config/test.exs b/projects/phoenix/1.5.7/database-noecto-nohtml-nowebpack-umbrella-live/config/test.exs
deleted file mode 100644
index af29307..0000000
--- config/test.exs
+++ /dev/null
@@ -1,4 +0,0 @@
-use Mix.Config
-
-# Print only warnings and errors during test
-config :logger, level: :warn
diff --git mix.exs mix.exs
index 099c509..304984a 100644
--- mix.exs
+++ mix.exs
@@ -1,4 +1,4 @@
-defmodule MyApp.Umbrella.MixProject do
+defmodule MyApp.MixProject do
   use Mix.Project
 
   def project do
@@ -6,40 +6,16 @@ defmodule MyApp.Umbrella.MixProject do
       apps_path: "apps",
       version: "0.1.0",
       start_permanent: Mix.env() == :prod,
-      deps: deps(),
-      aliases: aliases()
+      deps: deps()
     ]
   end
 
-  # Dependencies can be Hex packages:
+  # Dependencies listed here are available only for this
+  # project and cannot be accessed from applications inside
+  # the apps folder.
   #
-  #   {:mydep, "~> 0.3.0"}
-  #
-  # Or git/path repositories:
-  #
-  #   {:mydep, git: "https://github.com/elixir-lang/mydep.git", tag: "0.1.0"}
-  #
-  # Type "mix help deps" for more examples and options.
-  #
-  # Dependencies listed here are available only for this project
-  # and cannot be accessed from applications inside the apps/ folder.
+  # Run "mix help deps" for examples and options.
   defp deps do
     []
   end
-
-  # Aliases are shortcuts or tasks specific to the current project.
-  # For example, to install project dependencies and perform other setup tasks, run:
-  #
-  #     $ mix setup
-  #
-  # See the documentation for `Mix` for more info on aliases.
-  #
-  # Aliases listed here are available only for this project
-  # and cannot be accessed from applications inside the apps/ folder.
-  defp aliases do
-    [
-      # run `mix setup` in all child apps
-      setup: ["cmd mix setup"]
-    ]
-  end
 end
